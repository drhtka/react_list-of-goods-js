{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","goodsWithId","map","item","index","id","name","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","isReversed","setIsReversed","filteredAndSortedGoods","goods","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","sortedGoodsBy","_jsxs","className","children","_jsx","type","cn","onClick","_ref","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,IAAMC,EAAcJ,EAAgBK,KAAI,SAACC,EAAMC,GAAK,MAAM,CACxDC,GAAID,EAAQ,EACZE,KAAMH,MAGRI,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAoCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAlCR,SAAuBC,EAAOP,EAAWI,GACvC,IAAMI,EAAaC,YAAOF,GAqB1B,OAnBIP,GACFQ,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQZ,GACN,KAAKb,EACH,OAAOwB,EAAMhB,KAAKkB,cAAcD,EAAMjB,MAExC,KAAKP,EACH,OAAOuB,EAAMhB,KAAKmB,OAASF,EAAMjB,KAAKmB,OAExC,QACE,OAAO,MAKXV,GACFI,EAAcO,UAGTP,EAYwBQ,CAC7B1B,EACAU,EACAI,GAQF,OACEa,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,iBAAkB,CAChB,WAAYtB,IAAcb,IAG9BoC,QAAS,WACPtB,EAAad,IACbgC,SACH,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,oBAAqB,CACnB,WAAYtB,IAAcZ,IAG9BmC,QAAS,WACPtB,EAAcb,IACd+B,SACH,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IACT,oBAAqB,CACnB,YAAalB,IAGjBmB,QAAS,kBAAMlB,GAAeD,IAAYe,SAC3C,aAICnB,GAAaI,IACbgB,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QApDQ,WAChBtB,EAAa,IACbI,GAAc,IAkDac,SACpB,aAOLC,cAAA,MAAAD,SACGb,EAAuBf,KAAI,SAAAiC,GAAA,IAAG9B,EAAE8B,EAAF9B,GAAIC,EAAI6B,EAAJ7B,KAAI,OACrCyB,cAAA,MAEE,UAAQ,OAAMD,SAEbxB,GAHID,YCzHjB+B,IAASC,OACPN,cAAC/B,EAAG,IACJsC,SAASC,eAAe,W","file":"static/js/main.285f3a1d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction sortedGoodsBy(goods, sortField, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.name.localeCompare(good2.name);\n\n        case SORT_FIELD_LENGTH:\n          return good1.name.length - good2.name.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const goodsWithId = goodsFromServer.map((item, index) => ({\n    id: index + 1,\n    name: item,\n  }));\n\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const filteredAndSortedGoods = sortedGoodsBy(\n    goodsWithId,\n    sortField,\n    isReversed,\n  );\n\n  const resetSort = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info', {\n              'is-light': sortField !== SORT_FIELD_ALPHABET,\n            },\n          )}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success', {\n              'is-light': sortField !== SORT_FIELD_LENGTH,\n            },\n          )}\n          onClick={() => {\n            setSortField((SORT_FIELD_LENGTH));\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSort}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {filteredAndSortedGoods.map(({ id, name }) => (\n          <li\n            key={id}\n            data-cy=\"Good\"\n          >\n            {name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}